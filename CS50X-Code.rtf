{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red220\green220\blue220;\red26\green26\blue29;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c89020\c89020\c89020;\cssrgb\c13333\c13725\c15294;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl404\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 from flask import Flask, render_template, request, redirect, url_for, flash
\f1\fs24 \

\f0\fs29\fsmilli14667 from flask_sqlalchemy import SQLAlchemy
\f1\fs24 \

\f0\fs29\fsmilli14667 from datetime import datetime
\f1\fs24 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\sl404\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 app = Flask(__name__)
\f1\fs24 \

\f0\fs29\fsmilli14667 app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///notes.db'
\f1\fs24 \

\f0\fs29\fsmilli14667 app.secret_key = 'secret_key'
\f1\fs24 \

\f0\fs29\fsmilli14667 db = SQLAlchemy(app)
\f1\fs24 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\sl404\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 class Note(db.Model):
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0id = db.Column(db.Integer, primary_key=True)
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0title = db.Column(db.String(80), nullable=False)
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0content = db.Column(db.Text, nullable=False)
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0date_created = db.Column(db.DateTime, default=datetime.utcnow)
\f1\fs24 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\sl404\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 \'a0\'a0\'a0\'a0def __repr__(self):
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return '<Note %r>' % self.id
\f1\fs24 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\sl404\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 @app.route('/')
\f1\fs24 \

\f0\fs29\fsmilli14667 def index():
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0notes = Note.query.order_by(Note.date_created.desc()).all()
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0return render_template('index.html', notes=notes)
\f1\fs24 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\sl404\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 @app.route('/note/new', methods=['GET', 'POST'])
\f1\fs24 \

\f0\fs29\fsmilli14667 def new_note():
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0if request.method == 'POST':
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0title = request.form['title']
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0content = request.form['content']
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0note = Note(title=title, content=content)
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0db.session.add(note)
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0db.session.commit()
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0flash('Note created successfully!')
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return redirect(url_for('index'))
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0else:
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return render_template('new_note.html')
\f1\fs24 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\sl404\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 @app.route('/note/<int:id>')
\f1\fs24 \

\f0\fs29\fsmilli14667 def view_note(id):
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0note = Note.query.get_or_404(id)
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0return render_template('view_note.html', note=note)
\f1\fs24 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\sl404\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 @app.route('/note/<int:id>/update', methods=['GET', 'POST'])
\f1\fs24 \

\f0\fs29\fsmilli14667 def update_note(id):
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0note = Note.query.get_or_404(id)
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0if request.method == 'POST':
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0note.title = request.form['title']
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0note.content = request.form['content']
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0db.session.commit()
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0flash('Note updated successfully!')
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return redirect(url_for('index'))
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0else:
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return render_template('update_note.html', note=note)
\f1\fs24 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\sl404\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 @app.route('/note/<int:id>/delete', methods=['POST'])
\f1\fs24 \

\f0\fs29\fsmilli14667 def delete_note(id):
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0note = Note.query.get_or_404(id)
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0db.session.delete(note)
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0db.session.commit()
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0flash('Note deleted successfully!')
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0return redirect(url_for('index'))
\f1\fs24 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\sl404\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 if __name__ == '__main__':
\f1\fs24 \

\f0\fs29\fsmilli14667 \'a0\'a0\'a0\'a0app.run(debug=True)\
\
submit50 \

\f1\fs24 \
\pard\pardeftab720\sl360\partightenfactor0

\f2 \cf3 \cb4 \strokec3 \
}